class Solution {
    public int solve(int[] nums,int i,int j,int[][] dp){
          if(i > j ){
            return 0 ;
          }

         if(i == j){
            return nums[i];
         }

         if(dp[i][j] != -1){
            return dp[i][j];
         }

          int take_i = nums[i] + Math.min(solve(nums,i+2,j,dp),solve(nums,i+1,j-1,dp));
          int take_j = nums[j] + Math.min(solve(nums,i,j-2,dp),solve(nums,i+1,j-1,dp));

          return dp[i][j] = Math.max(take_i,take_j);
    }
    
    public boolean predictTheWinner(int[] nums) {
        int n=nums.length;
         int[][] dp = new int[n][n];

         for(int[] dpA : dp){
            Arrays.fill(dpA,-1);
         }

        int maxval = solve(nums,0,n-1,dp);
        int sum = 0;
        for(int val : nums){
            sum+=val;
        }

        return maxval >= sum - maxval;
    }
}
